@using Drive.Security;

@{
    ViewBag.Title = "Index";
}

<h2>Index</h2>

<style>
    .selected {
        background-color: blue;
    }
</style>

<h3>Hello @SessionManager.User.Name</h3>

<h4>Folders</h4>

<div id="file-actions" class="actions">
    <button class="delete">Delete</button>
    <button class="download">Download</button>
</div>
<div id="folder-actions" class="actions">
    <button class="delete">Delete</button>
    <button class="download">Download Meta</button>
</div>
<div id="breadcrumbs">
    <span class="breadcrumb-item" folder-id="-1">Home</span>
</div>

<div id="folders"></div>

<h4>Files</h4>

<div id="files"></div>

@section scripts {
    @Scripts.Render("~/bundles/uglipop")

    <script>

        //Load folders on page load
        $(document).ready(function () {
            Folder.getFoldersFromServer();

            $(".actions").hide();

            $("button[name=new-folder]").click(function () { promptNewFolder(); });
            $("button[name=new-file]").click(function () { promptNewFile(); });

            //Register single click event on a breadcrumb
            $(document).on("click", ".breadcrumb-item", function () {
                currentFolderId = $(this).attr("folder-id");

                var items = $("#breadcrumbs .breadcrumb-item");

                for (var i = items.length - 1 ; i > -1; i--) {
                    var item = $(items[i]);
                    var id = item.attr("folder-id");

                    if (id == currentFolderId)
                        break;

                    //$(items).remove($(item));
                    $(item).remove();
                }

                Folder.getFoldersFromServer();
            });

            //Register event for delete button
            $(document).on("click", ".file", function (e) {
                $(".selected").not(this).removeClass("selected");

                $("#folder-actions").hide();
                $("#file-actions").show();
                $(this).toggleClass("selected");

                if (!$(this).hasClass("selected"))
                    $("#file-actions").hide();

                var id = $(this).attr("file-id");
                $("#file-actions .delete").attr("obj-id", id).attr("obj-type", "file");
                $("#file-actions .download").attr("obj-id", id);
            });

            $(document).on("click", ".delete", function (e) {
                if ($(this).attr("obj-type") == "file")
                    File.deleteFile($(this).attr("obj-id"));
                else
                    Folder.deleteFolder($(this).attr("obj-id"));
            });

            $(document).on("click", ".download", function (e) {
                File.downloadFile($(this).attr("obj-id"));
            });

            //var clickCount = 0;

            //$(document).on('click', ".folder", function () {
            //    clickCount++;
            //    if (clickCount === 1) {
            //        singleClickTimer = setTimeout(function () {
            //            clickCount = 0;
            //            Folder.toggleActionsFor(this);
            //        }, 400);
            //    } else if (clickCount === 2) {
            //        clearTimeout(singleClickTimer);
            //        clickCount = 0;
            //        Folder.navigateTo(this);
            //    }
            //}, false);

            //var element = $(".folder"), single_click_timeout;

            //function clicked(e) {
            //    single_click_timeout = setTimeout(function () {
            //        // do something for a SINGLE click
            //        Folder.toggleActionsFor($(e.target).closest(".folder"));
            //    }, 750);
            //}

            //function dblclicked(e) {
            //    // stop the single click function
            //    clearTimeout(single_click_timeout);
            //    Folder.navigateTo($(e.target).closest(".folder"));
            //    // do something for a DOUBLE click
            //}

            //$(document).on("click", ".folder", clicked);
            //$(document).on("dblclick", ".folder", dblclicked);

            var timer = 0;
            var delay = 400;
            var prevent = false;

            $(document).on("click", ".folder", function (e) {
                  timer = setTimeout(function () {
                      if (!prevent) {
                          Folder.toggleActionsFor($(e.target).closest(".folder"));
                      }
                      prevent = false;
                  }, delay);
            });

            $(document).on("dblclick", ".folder", function (e) {
                clearTimeout(timer);
                prevent = true;
                Folder.navigateTo($(e.target).closest(".folder"));
            });

        });





        //prompt to add new folder
        var promptNewFolder = function () {
            uglipop({ class: 'prompt', source: 'div', content: 'add-new-folder-popup' });
        }

        //prompt to add new file
        var promptNewFile = function () {
            uglipop({ class: 'prompt', source: 'div', content: 'add-new-file-popup' });
        }


    </script>

    <div id="add-new-folder-popup" style="display:none;">
        <h5>New Folder</h5>
        Name: <input type="text" id="new-folder-name" required autofocus />
        <button onclick="Folder.addNewFolder();">Add</button>
        <button onclick="remove();">Cancel</button>
    </div>

    <div id="add-new-file-popup" style="display:none;">
        <h5>New File</h5>
        File: <input type="file" id="new-file-name" required autofocus />
        <button onclick="File.uploadFile();">Add</button>
        <button onclick="remove();">Cancel</button>
    </div>
}

